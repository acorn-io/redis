name:        "Redis Acorn"
description: "Acorn providing Redis"
readme:      "./README.md"
info:        localData.info
icon:        "./icon.png"

args: {
}

services: db: {
	default:   true
	container: "redis"
	secrets: ["admin"]
	ports: "6379"
}

containers: {
	redis: {
		name:        "Redis"
		description: "Container running a Redis server"
		image:       "redis:7.2.4-alpine"
		entrypoint: ["redis-server", "--aclfile", "/etc/users.acl"]
		ports: "6379/tcp"
		files: {
			"/etc/users.acl": "secret://users-acl/template"
		}
		dirs: {
			"/data": "volume://db-data"
		}
		probes: [
			{
				type:                "liveness"
				initialDelaySeconds: 10
				timeoutSeconds:      5
				tcp: {
					url: "tcp://localhost:6379"
				}
			},
			{
				type:                "readiness"
				initialDelaySeconds: 10
				exec: command: localData.readinessProbeCommand
			},
		]
	}
}

volumes: {
	"db-data": {}
}

secrets: {
	admin: {
		name: "password to be used for the admin user"
		type: "token"
		params: {
			length:     16
			characters: "abcdedfhifj01234567890"
		}
		data: token: ""
	}
}

secrets: {
	"users-acl": {
		type: "template"
		data: {
			template: """
            user default on >${secret://admin/token} ~* &* +@all
            """
		}
	}
}

localData: readinessProbeCommand: [
	"/bin/sh",
	"-c",
	"redis-cli --pass ${secret://admin/token} ping",
]

localData: info: """
	## Usage

	services: db: image: "ghcr.io/acorn-io/redis:v#.#.#-#"

	containers: app: {
		image: "app-image"
		env: {
		  DB_HOST: "@{@{service.}db.address}"
		  DB_PORT: "@{@{service.}db.port.6379}"
		  DB_PASS: "@{@{service.}db.secrets.admin.token}"
		}
	}
	"""
